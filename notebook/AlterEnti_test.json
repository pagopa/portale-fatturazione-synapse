{
	"name": "AlterEnti_test",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkcls01",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 1,
			"conf": {
				"spark.dynamicAllocation.enabled": "true",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "fc048e3d-3125-4417-811c-f2015c1efd38"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/5c587d75-fb91-4559-bda2-8612949a2b7d/resourceGroups/fat-d-analytics-rg/providers/Microsoft.Synapse/workspaces/fat-d-synw/bigDataPools/sparkcls01",
				"name": "sparkcls01",
				"type": "Spark",
				"endpoint": "https://fat-d-synw.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkcls01",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": true
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"#Variables\r\n",
					"tableNameEnti = 'fat_delta.enti_history'\r\n",
					"tableNameContratti = 'fat_delta.contratti_history'\r\n",
					"linked_service_name = 'nomeLinkedService'\r\n",
					"#sourcefile = 'abfss://raw@fatddls.dfs.core.windows.net/send/2023/11/08/selfcare_contract/selfcare_contract_20231108.parquet'\r\n",
					"#sourcefile = 'abfss://raw@fatddls.dfs.core.windows.net/send/TEST/part-00000-668a5a56-4584-4f99-afe9-c046b0049a90-c000.snappy.parquet'"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import functions as F\r\n",
					"from delta.tables import *\r\n",
					"from pyspark.sql.functions import max , row_number, col\r\n",
					"from datetime import datetime\r\n",
					"from pyspark.sql.window import Window"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# recupero la tabella precedentemente droppata\r\n",
					"spark.sql(\"CREATE TABLE IF NOT EXISTS fat_delta.enti_history USING Parquet LOCATION 'abfss://synapse@fatddls.dfs.core.windows.net/synapse/workspaces/fat-d-synw/warehouse/enti_history'\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.sql(\"\"\"\r\n",
					"  ALTER TABLE fat_delta.enti_history\r\n",
					"  SET TBLPROPERTIES (\r\n",
					"    'delta.columnMapping.mode' = 'name',\r\n",
					"    'delta.minReaderVersion' = '2',\r\n",
					"    'delta.minWriterVersion' = '5'\r\n",
					"  )\r\n",
					"\"\"\")"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"dfDetails = spark.sql('DESCRIBE DETAIL fat_delta.enti_history')"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"display(dfDetails)"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.sql('ALTER TABLE fat_delta.enti_history RENAME COLUMN InsertionTimestamp TO LastModified')"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"tDeltaEnti = DeltaTable.forName(spark, tableNameEnti)\r\n",
					"#tDeltaContratti = DeltaTable.forName(spark, tableNameContratti)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.sql('ALTER TABLE fat_delta.test ADD COLUMN pippo string')"
				],
				"execution_count": 10
			}
		]
	}
}