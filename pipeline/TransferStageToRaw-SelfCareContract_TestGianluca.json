{
	"name": "TransferStageToRaw-SelfCareContract_TestGianluca",
	"properties": {
		"activities": [
			{
				"name": "Loop",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "PathFileFull",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get FileName').output.pipelineReturnValue",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Transfer Files to raw",
							"type": "Copy",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "@item().FolderInput",
											"type": "Expression"
										},
										"wildcardFileName": "*.parquet",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "ParquetReadSettings"
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "fat_stage_parquet",
									"type": "DatasetReference",
									"parameters": {
										"PathFolderFile": {
											"value": "@item().FolderInput",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "fat_ddls_parquet",
									"type": "DatasetReference",
									"parameters": {
										"PathFolderSink": {
											"value": "@variables('PathFile')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Delete Files in stage",
							"type": "Delete",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "IngestSelfCare_History",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "fat_stage_parquet",
									"type": "DatasetReference",
									"parameters": {
										"PathFolderFile": {
											"value": "@item().FolderInput",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "IngestSelfCare",
							"type": "SynapseNotebook",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "Transfer Files to raw",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebook": {
									"referenceName": "IngestSelfCare",
									"type": "NotebookReference"
								},
								"parameters": {
									"sourcefile": {
										"value": {
											"value": "@concat('abfss://raw@fatddls.dfs.core.windows.net/',variables('PathFile'),'/',variables('PathFileFull'))",
											"type": "Expression"
										},
										"type": "string"
									}
								},
								"snapshot": true,
								"sparkPool": {
									"referenceName": "sparkcls01",
									"type": "BigDataPoolReference"
								},
								"executorSize": "Small",
								"conf": {
									"spark.dynamicAllocation.enabled": null,
									"spark.dynamicAllocation.minExecutors": null,
									"spark.dynamicAllocation.maxExecutors": null
								},
								"driverSize": "Small",
								"numExecutors": null
							}
						},
						{
							"name": "IngestSelfCare_History",
							"type": "SynapseNotebook",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "IngestSelfCare",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebook": {
									"referenceName": "IngestSelfCare_History",
									"type": "NotebookReference"
								},
								"snapshot": true,
								"sparkPool": {
									"referenceName": "sparkcls01",
									"type": "BigDataPoolReference"
								},
								"executorSize": "Small",
								"conf": {
									"spark.dynamicAllocation.enabled": null,
									"spark.dynamicAllocation.minExecutors": null,
									"spark.dynamicAllocation.maxExecutors": null
								},
								"driverSize": "Small",
								"numExecutors": null
							}
						}
					]
				}
			},
			{
				"name": "Get FileName",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "fat_stage_parquet",
						"type": "DatasetReference",
						"parameters": {
							"PathFolderFile": {
								"value": "@variables('Source Path')",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems",
						"itemName"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "ParquetReadSettings"
					}
				}
			},
			{
				"name": "PathFile",
				"type": "SetVariable",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Get FileName",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "PathFile",
					"value": {
						"value": "@concat(substring(string(item().FolderInput),0,indexOf(string(item().FolderInput),'/')),'/',substring(string(activity('Get FileName').output.childItems[1].name),add(indexOf(string(activity('Get FileName').output.childItems[1].name),'_20'),1),4),'/',substring(string(activity('Get FileName').output.childItems[1].name),add(indexOf(string(activity('Get FileName').output.childItems[1].name),'_20'),5),2),'/',substring(string(activity('Get FileName').output.childItems[1].name),add(indexOf(string(activity('Get FileName').output.childItems[1].name),'_20'),7),2),'/',replace(string(item().FolderInput),'send/',''))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "PathFileFull",
				"type": "SetVariable",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "PathFile",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "PathFileFull",
					"value": {
						"value": "@string(activity('Get FileName').output.childItems[1].name)",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"PathFile": {
				"type": "String"
			},
			"PathFileFull": {
				"type": "String"
			},
			"Source Path": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-11-10T11:49:13Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}