{
	"name": "00_MainStarter",
	"properties": {
		"activities": [
			{
				"name": "Read Jobs From Task",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('SELECT DISTINCT [Pipeline] FROM [cfg].[vToDoActivitiesSynapse] where [TaskId] = ',pipeline().parameters.TaskId)",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "fat_d_sql",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEachJobInTask",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Read Jobs From Task",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Read Jobs From Task').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "If 11_TransferStageToRaw",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().Pipeline, '11_TransferStageToRaw')\n\n\n",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Execute StageStarter",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "10_StageStarter",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"TaskId": {
													"value": "@pipeline().parameters.TaskId",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						},
						{
							"name": "If 12_TransferLakeDBToSQL",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "If 11_TransferStageToRaw",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().Pipeline, '12_TransferLakeDBToSQL')\n\n\n",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Execute TransferLakeDBToSQL",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "12_TransferLakeDBToSQL",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"TaskId": {
													"value": "@pipeline().parameters.TaskId",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						},
						{
							"name": "If 13_ExecProcedureInSQL",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "If 12_TransferLakeDBToSQL",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().Pipeline, '13_ExecProcedureInSQL')\n\n\n",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Execute ExecProcedureInSQL",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "13_ExecProcedureInSQL",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"TaskId": {
													"value": "@pipeline().parameters.TaskId",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						},
						{
							"name": "If SendToSap",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "If 13_ExecProcedureInSQL",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().Pipeline, 'SendToSap')\n\n\n",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Execute SendToSap",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "SendToSAP",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true
										}
									}
								]
							}
						},
						{
							"name": "If ProcessNotifiche",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "If SendToSap",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().Pipeline, '01_ProcessNotifiche')\n\n\n",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Execute ProcessNotifiche",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "14_ProcessNotifiche",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true
										}
									}
								]
							}
						},
						{
							"name": "If ManageInvoice",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "If ProcessNotifiche",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().Pipeline, '99_ManageInvoice')\n\n\n",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Execute ManageInvoice",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "99_ManageInvoice",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"TaskId": {
													"value": "@pipeline().parameters.TaskId",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"TaskId": {
				"type": "string",
				"defaultValue": "0"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-12-18T11:36:29Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}