{
	"name": "TransferStageToRaw-SelfCareContract",
	"properties": {
		"activities": [
			{
				"name": "Loop",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get FileName",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@skip(activity('Get FileName').output.childItems, 1)",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "FileName",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "FileName",
								"value": {
									"value": "@item().name",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "FileName",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@not(endswith(variables('FileName'), '.txt'))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "PathFileFullRaw",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "PathFileFullRaw",
											"value": {
												"value": "@concat(substring(string(pipeline().parameters.FolderInput),0,indexOf(string(pipeline().parameters.FolderInput),'/')),'/',substring(string(variables('FileName')),add(indexOf(string(variables('FileName')),'_20'),1),4),'/',substring(string(variables('FileName')),add(indexOf(string(variables('FileName')),'_20'),5),2),'/',substring(string(variables('FileName')),add(indexOf(string(variables('FileName')),'_20'),7),2),'/',replace(string(pipeline().parameters.FolderInput),'send/',''))",
												"type": "Expression"
											}
										}
									},
									{
										"name": "TransferFilesToRaw",
										"type": "Copy",
										"state": "Inactive",
										"onInactiveMarkAs": "Succeeded",
										"dependsOn": [
											{
												"activity": "PathFileFullRaw",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "ParquetSource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true,
													"wildcardFolderPath": {
														"value": "@pipeline().parameters.FolderInput",
														"type": "Expression"
													},
													"wildcardFileName": {
														"value": "@variables('FileName')",
														"type": "Expression"
													},
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "ParquetReadSettings"
												}
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "fat_stage_parquet",
												"type": "DatasetReference",
												"parameters": {
													"PathFolderFile": {
														"value": "@pipeline().parameters.FolderInput",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "fat_ddls_parquet",
												"type": "DatasetReference",
												"parameters": {
													"PathFolderSink": {
														"value": "@variables('PathFileFullRaw')",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "DeleteFilesInStage",
										"type": "Delete",
										"state": "Inactive",
										"onInactiveMarkAs": "Succeeded",
										"dependsOn": [
											{
												"activity": "IngestSelfCare_History",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "fat_stage_parquet",
												"type": "DatasetReference",
												"parameters": {
													"PathFolderFile": {
														"value": "@pipeline().parameters.FolderInput",
														"type": "Expression"
													}
												}
											},
											"enableLogging": false,
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@{variables('FileName')}",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											}
										}
									},
									{
										"name": "PathFileFullStage",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "TransferFilesToRaw",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "PathFileFullStage",
											"value": {
												"value": "@concat(string(pipeline().parameters.FolderInput), '/',variables('FileName'))",
												"type": "Expression"
											}
										}
									},
									{
										"name": "IngestSelfCare",
										"type": "SynapseNotebook",
										"state": "Inactive",
										"onInactiveMarkAs": "Succeeded",
										"dependsOn": [
											{
												"activity": "PathFileFullStage",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"notebook": {
												"referenceName": "IngestSelfCare",
												"type": "NotebookReference"
											},
											"parameters": {
												"sourcefile": {
													"value": {
														"value": "@concat('abfss://raw@fatddls.dfs.core.windows.net/',variables('PathFile'),'/',variables('PathFileFull'))",
														"type": "Expression"
													},
													"type": "string"
												}
											},
											"snapshot": true,
											"sparkPool": {
												"referenceName": "sparkcls01",
												"type": "BigDataPoolReference"
											},
											"executorSize": "Small",
											"conf": {
												"spark.dynamicAllocation.enabled": null,
												"spark.dynamicAllocation.minExecutors": null,
												"spark.dynamicAllocation.maxExecutors": null
											},
											"driverSize": "Small",
											"numExecutors": null
										}
									},
									{
										"name": "IngestSelfCare_History",
										"type": "SynapseNotebook",
										"state": "Inactive",
										"onInactiveMarkAs": "Succeeded",
										"dependsOn": [
											{
												"activity": "IngestSelfCare",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"notebook": {
												"referenceName": "IngestSelfCare_History",
												"type": "NotebookReference"
											},
											"snapshot": true,
											"sparkPool": {
												"referenceName": "sparkcls01",
												"type": "BigDataPoolReference"
											},
											"executorSize": "Small",
											"conf": {
												"spark.dynamicAllocation.enabled": null,
												"spark.dynamicAllocation.minExecutors": null,
												"spark.dynamicAllocation.maxExecutors": null
											},
											"driverSize": "Small",
											"numExecutors": null
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Get FileName",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "fat_stage_parquet",
						"type": "DatasetReference",
						"parameters": {
							"PathFolderFile": {
								"value": "@pipeline().parameters.FolderInput",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems",
						"itemName",
						"itemType"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "ParquetReadSettings"
					}
				}
			}
		],
		"parameters": {
			"FolderInput": {
				"type": "string"
			}
		},
		"variables": {
			"PathFileFullRaw": {
				"type": "String"
			},
			"PathFileFullStage": {
				"type": "String"
			},
			"FileName": {
				"type": "String"
			},
			"SourcePath": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-11-10T11:49:13Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}